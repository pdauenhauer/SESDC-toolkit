{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UploadForm(){const[file,setFile]=useState(null);//store the uploaded file\nconst[responseMessage,setResponseMessage]=useState(\"\");//to display server response\nconst[imageUrl,setImageUrl]=useState(null);const handleFileChange=event=>{setFile(event.target.files[0]);//update the file state with the selected file\nconsole.log(\"File selected:\",event.target.files[0]);//debug\n};const handleSubmit=async event=>{event.preventDefault();console.log(\"Uploading file:\",file);if(!file){alert(\"Please upload a file first.\");return;}const formData=new FormData();formData.append(\"file\",file);//append the file to the FormData object\ntry{console.log(\"fetching response...\");const response=await fetch(\"http://localhost:8080/upload\",{method:\"POST\",body:formData});console.log(\"Response status:\",response.status);if(!response.ok){// Log the full response for debugging\nconsole.log(\"Response not accepted\");const errorData=await response.json();console.error(\"Server error:\",errorData);throw new Error(errorData.error||\"File upload failed.\");}const data=await response.json();console.log(\"Data from backend:\",data);if(data.message){setResponseMessage(data.message);}else{alert(\"Message not found in response.\");}if(data.plot_url){setImageUrl(data.plot_url);//set the plot image URL returned from the backend\n}}catch(error){console.error(\"Error uploading file:\",error);setResponseMessage(\"Error uploading file.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upload CSV File\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Upload\"})]}),responseMessage&&/*#__PURE__*/_jsx(\"p\",{children:responseMessage}),imageUrl&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Generated Graph:\"}),/*#__PURE__*/_jsx(\"img\",{src:\"http://localhost:8080/\".concat(imageUrl),alt:\"Generated graph\",style:{maxWidth:'100%'}})]})]});};export default UploadForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UploadForm","file","setFile","responseMessage","setResponseMessage","imageUrl","setImageUrl","handleFileChange","event","target","files","console","log","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","status","ok","errorData","json","error","Error","data","message","plot_url","children","onSubmit","type","accept","onChange","src","concat","alt","style","maxWidth"],"sources":["/Users/jessicahuang/Personal Capstone Workspace/11-23-24-toolkit/frontend/src/Components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction UploadForm() {\n  const [file, setFile] = useState(null); //store the uploaded file\n  const [responseMessage, setResponseMessage] = useState(\"\"); //to display server response\n  const [imageUrl, setImageUrl] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]); //update the file state with the selected file\n    console.log(\"File selected:\", event.target.files[0]); //debug\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"Uploading file:\", file);\n\n    if (!file) {\n      alert(\"Please upload a file first.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file); //append the file to the FormData object\n\n    try {\n      console.log(\"fetching response...\");\n      const response = await fetch(\"http://localhost:8080/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      console.log(\"Response status:\", response.status);\n\n      if (!response.ok) {\n        // Log the full response for debugging\n\tconsole.log(\"Response not accepted\");\n        const errorData = await response.json();\n        console.error(\"Server error:\", errorData);\n        throw new Error(errorData.error || \"File upload failed.\");\n      }\n\n      const data = await response.json();\n      console.log(\"Data from backend:\", data);\n\n      if (data.message) {\n\t  setResponseMessage(data.message);\n      } else {\n\t  alert(\"Message not found in response.\");\n      }\n\n      if (data.plot_url) {\n          setImageUrl(data.plot_url);  //set the plot image URL returned from the backend\n      }\n\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setResponseMessage(\"Error uploading file.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload CSV File</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      {responseMessage && <p>{responseMessage}</p>}\n      {/* Display the generated plot image */}\n      {imageUrl && <div>\n          <h3>Generated Graph:</h3>\n          <img src={`http://localhost:8080/${imageUrl}`} alt=\"Generated graph\" style={{ maxWidth: '100%' }} />\n      </div>}\n    </div>\n  );\n};\n\nexport default UploadForm;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAAE;AACxC,KAAM,CAACQ,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5D,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE9C,KAAM,CAAAY,gBAAgB,CAAIC,KAAK,EAAK,CAClCN,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;AAChCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;AACxD,CAAC,CAED,KAAM,CAAAG,YAAY,CAAG,KAAO,CAAAL,KAAK,EAAK,CACpCA,KAAK,CAACM,cAAc,CAAC,CAAC,CACtBH,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEX,IAAI,CAAC,CAEpC,GAAI,CAACA,IAAI,CAAE,CACTc,KAAK,CAAC,6BAA6B,CAAC,CACpC,OACF,CAEA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEjB,IAAI,CAAC,CAAE;AAE/B,GAAI,CACFU,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAAE,CAC3DC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CACFL,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEO,QAAQ,CAACI,MAAM,CAAC,CAEhD,GAAI,CAACJ,QAAQ,CAACK,EAAE,CAAE,CAChB;AACPb,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAC7B,KAAM,CAAAa,SAAS,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACvCf,OAAO,CAACgB,KAAK,CAAC,eAAe,CAAEF,SAAS,CAAC,CACzC,KAAM,IAAI,CAAAG,KAAK,CAACH,SAAS,CAACE,KAAK,EAAI,qBAAqB,CAAC,CAC3D,CAEA,KAAM,CAAAE,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCf,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEiB,IAAI,CAAC,CAEvC,GAAIA,IAAI,CAACC,OAAO,CAAE,CACrB1B,kBAAkB,CAACyB,IAAI,CAACC,OAAO,CAAC,CAC7B,CAAC,IAAM,CACVf,KAAK,CAAC,gCAAgC,CAAC,CACpC,CAEA,GAAIc,IAAI,CAACE,QAAQ,CAAE,CACfzB,WAAW,CAACuB,IAAI,CAACE,QAAQ,CAAC,CAAG;AACjC,CAEF,CAAE,MAAOJ,KAAK,CAAE,CACdhB,OAAO,CAACgB,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CvB,kBAAkB,CAAC,uBAAuB,CAAC,CAC7C,CACF,CAAC,CAED,mBACEL,KAAA,QAAAiC,QAAA,eACEnC,IAAA,OAAAmC,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBjC,KAAA,SAAMkC,QAAQ,CAAEpB,YAAa,CAAAmB,QAAA,eAC3BnC,IAAA,UAAOqC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,MAAM,CAACC,QAAQ,CAAE7B,gBAAiB,CAAE,CAAC,cAC/DV,IAAA,WAAQqC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,CACN7B,eAAe,eAAIN,IAAA,MAAAmC,QAAA,CAAI7B,eAAe,CAAI,CAAC,CAE3CE,QAAQ,eAAIN,KAAA,QAAAiC,QAAA,eACTnC,IAAA,OAAAmC,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBnC,IAAA,QAAKwC,GAAG,0BAAAC,MAAA,CAA2BjC,QAAQ,CAAG,CAACkC,GAAG,CAAC,iBAAiB,CAACC,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAE,CAAC,EACnG,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}